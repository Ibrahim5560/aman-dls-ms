/**
 * Application (dls_application) entity.
 * @author Ibrahim Hassanin.
 */
entity Application (dls_application) {
    status ApplicationStatus required,
    statusDescription String required,
    statusDate Instant required,
    activePhase PhaseType required,
    confirmedBy String,
    confirmationDate Instant,
    rejectedBy String,
    rejectionReason String,
    rejectionDate Instant,
    processInstanceId Long unique,
    channelCode String required,
    channelDescription String required,
    customerId String,
    customerName String,
    tradeLicenseNo String,
    corporateName String,
    userType String required,
    userTypeDescription String required,
    userRole String required,
    applicationCriteria String,
    createdBy String required,
    createdDate Instant required,
    lastModifiedBy String ,
    lastModifiedDate Instant
}

enum ApplicationStatus {
    NEW,
    UNDER_PROCESSING,
    COMPLETED,
    REJECTED
}

/**
 * ApplicationType (dls_application_type) entity.
 * @author Ibrahim Hassanin.
 */
entity ApplicationType (dls_application_type) {
	code String required
}


/**
 * ApplicationPhase (dls_application_phase) entity.
 * @author Ibrahim Hassanin.
 */
entity ApplicationPhase (dls_application_phase) {
	type PhaseType required,
    sequence Integer required,
    startDate Instant required,
    endDate Instant,
    persona String required
}

enum PhaseType {
    CUSTOMER_ELIGIBILITY,
    DRIVING_LEARNING_FILE_PROCESSING,
    DRIVING_LEARNING_FILE_AUDIT,
    READY_FOR_CONTRACT_SIGN,
    EYE_TEST,
    THEORY_LECTURE,
    KNOWLEDGE_TEST,
    PRACTICAL_TRAINING,
    YARD_TEST,
    ADVANCED_PRACTICAL_TRAINING,
    ROAD_TEST,
    PRINT_LICENSE,
    APPLICATION_REJECTION,
    EXEMPTION_AUDITING
}

/**
 * ServiceRequest (dls_service_request) entity.
 * @author Ibrahim Hassanin.
 */
entity ServiceRequest (dls_service_request) {
    serviceDocument TextBlob,
    feeDocument TextBlob,
    serviceCode String required,
    phaseType PhaseType required,
    status ServiceRequestStatus required,
    statusDescription String required,
    statusDate Instant required,
    totalFeeAmount Double,
    paidBy String,
    paymentMethod Integer,
    paymentReference Long,
    paymentDate Instant,
    rejectedBy String,
    rejectionReason String,
    rejectionDate Instant,
    processInstanceId Long
}

enum ServiceRequestStatus {
    UNDER_PROCESSING,
    VERIFIED_AND_LOCKED,
    CONFIRMED,
    REJECTED
}

/**
 * ApplicationViolation (dls_application_violation) entity.
 * @author Ibrahim Hassanin.
 */
entity ApplicationViolation (dls_application_violation) {
	code String required,
    isEligibleForExemption Boolean required,
    isExempted Boolean required,
    level ViolationLevel required,
    exemptionProcessId Long,
    exemptedBy String,
    exemptionDate Instant
}

enum ViolationLevel {
	BLOCKER,
    WARNING,
    INFO
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
    Application{applicationPhase} to ApplicationPhase,
    ServiceRequest{applicationViolation} to ApplicationViolation,
    Application{serviceRequest} to ServiceRequest,
    Application{applicationViolation} to ApplicationViolation
}

// defining multiple ManyToOne relationships with comments
relationship ManyToOne {
    ServiceRequest{reversedBy} to ServiceRequest,
	Application{applicationType} to ApplicationType
}


// Set pagination options
paginate Application with pagination
paginate ApplicationPhase with pagination
paginate ServiceRequest with pagination
paginate ApplicationViolation with pagination
paginate ApplicationType with pagination

// Use Data Transfert Objects (DTO)
dto * with mapstruct

// Set service options
service all with serviceImpl


// 4) microservice
microservice * with amanDLSMS

// 5) filter
filter all

// 6) clientRootFolder
clientRootFolder Application with amanDLSMS
clientRootFolder ApplicationPhase with amanDLSMS
clientRootFolder ServiceRequest with amanDLSMS
clientRootFolder ApplicationViolation with amanDLSMS
clientRootFolder ApplicationType with amanDLSMS

